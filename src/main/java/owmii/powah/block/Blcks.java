package owmii.powah.block;

import net.minecraft.block.Block;
import owmii.lib.block.AbstractBlock;
import owmii.lib.block.Properties;
import owmii.lib.registry.Registry;
import owmii.powah.Powah;
import owmii.powah.block.cable.CableBlock;
import owmii.powah.block.discharger.EnergyDischargerBlock;
import owmii.powah.block.ender.EnderCellBlock;
import owmii.powah.block.ender.EnderGateBlock;
import owmii.powah.block.energizing.EnergizingOrbBlock;
import owmii.powah.block.energizing.EnergizingRodBlock;
import owmii.powah.block.energycell.EnergyCellBlock;
import owmii.powah.block.furnator.FurnatorBlock;
import owmii.powah.block.hopper.EnergyHopperBlock;
import owmii.powah.block.magmator.MagmatorBlock;
import owmii.powah.block.reactor.ReactorBlock;
import owmii.powah.block.solar.SolarBlock;
import owmii.powah.block.thermo.ThermoBlock;
import owmii.powah.block.transmitter.PlayerTransmitterBlock;

public class Blcks {
    public static final Registry<Block> REG = new Registry<>(Block.class, Powah.MOD_ID);
    public static final AbstractBlock ENERGY_CELL_STARTER = REG.register("energy_cell", new EnergyCellBlock(Properties.rockNoSolid(1.0f, 8.0f), Tier.STARTER));
    public static final AbstractBlock ENERGY_CELL_BASIC = REG.register("energy_cell", new EnergyCellBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BASIC));
    public static final AbstractBlock ENERGY_CELL_HARDENED = REG.register("energy_cell", new EnergyCellBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.HARDENED));
    public static final AbstractBlock ENERGY_CELL_BLAZING = REG.register("energy_cell", new EnergyCellBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BLAZING));
    public static final AbstractBlock ENERGY_CELL_NIOTIC = REG.register("energy_cell", new EnergyCellBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NIOTIC));
    public static final AbstractBlock ENERGY_CELL_SPIRITED = REG.register("energy_cell", new EnergyCellBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.SPIRITED));
    public static final AbstractBlock ENERGY_CELL_NITRO = REG.register("energy_cell", new EnergyCellBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NITRO));
    public static final AbstractBlock ENERGY_CELL_CREATIVE = REG.register("energy_cell", new EnergyCellBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.CREATIVE));
    public static final AbstractBlock ENDER_CELL_STARTER = REG.register("ender_cell", new EnderCellBlock(Properties.rockNoSolid(1.0f, 8.0f), Tier.STARTER));
    public static final AbstractBlock ENDER_CELL_BASIC = REG.register("ender_cell", new EnderCellBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BASIC));
    public static final AbstractBlock ENDER_CELL_HARDENED = REG.register("ender_cell", new EnderCellBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.HARDENED));
    public static final AbstractBlock ENDER_CELL_BLAZING = REG.register("ender_cell", new EnderCellBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BLAZING));
    public static final AbstractBlock ENDER_CELL_NIOTIC = REG.register("ender_cell", new EnderCellBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NIOTIC));
    public static final AbstractBlock ENDER_CELL_SPIRITED = REG.register("ender_cell", new EnderCellBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.SPIRITED));
    public static final AbstractBlock ENDER_CELL_NITRO = REG.register("ender_cell", new EnderCellBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NITRO));
    public static final AbstractBlock CABLE_STARTER = REG.register("energy_cable", new CableBlock(Properties.rockNoSolid(1.0f, 8.0f).doesNotBlockMovement(), Tier.STARTER));
    public static final AbstractBlock CABLE_BASIC = REG.register("energy_cable", new CableBlock(Properties.metalNoSolid(2.0f, 20.0f).doesNotBlockMovement(), Tier.BASIC));
    public static final AbstractBlock CABLE_HARDENED = REG.register("energy_cable", new CableBlock(Properties.metalNoSolid(2.0f, 20.0f).doesNotBlockMovement(), Tier.HARDENED));
    public static final AbstractBlock CABLE_BLAZING = REG.register("energy_cable", new CableBlock(Properties.metalNoSolid(2.0f, 20.0f).doesNotBlockMovement(), Tier.BLAZING));
    public static final AbstractBlock CABLE_NIOTIC = REG.register("energy_cable", new CableBlock(Properties.metalNoSolid(2.0f, 20.0f).doesNotBlockMovement(), Tier.NIOTIC));
    public static final AbstractBlock CABLE_SPIRITED = REG.register("energy_cable", new CableBlock(Properties.metalNoSolid(2.0f, 20.0f).doesNotBlockMovement(), Tier.SPIRITED));
    public static final AbstractBlock CABLE_NITRO = REG.register("energy_cable", new CableBlock(Properties.metalNoSolid(2.0f, 20.0f).doesNotBlockMovement(), Tier.NITRO));
    public static final AbstractBlock ENDER_GATE_STARTER = REG.register("ender_gate", new EnderGateBlock(Properties.rockNoSolid(1.0f, 8.0f), Tier.STARTER));
    public static final AbstractBlock ENDER_GATE_BASIC = REG.register("ender_gate", new EnderGateBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BASIC));
    public static final AbstractBlock ENDER_GATE_HARDENED = REG.register("ender_gate", new EnderGateBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.HARDENED));
    public static final AbstractBlock ENDER_GATE_BLAZING = REG.register("ender_gate", new EnderGateBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BLAZING));
    public static final AbstractBlock ENDER_GATE_NIOTIC = REG.register("ender_gate", new EnderGateBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NIOTIC));
    public static final AbstractBlock ENDER_GATE_SPIRITED = REG.register("ender_gate", new EnderGateBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.SPIRITED));
    public static final AbstractBlock ENDER_GATE_NITRO = REG.register("ender_gate", new EnderGateBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NITRO));
    public static final AbstractBlock ENERGIZING_ORB = REG.register("energizing_orb", new EnergizingOrbBlock(Properties.metalNoSolid(2.0f, 20.0f)));
    public static final AbstractBlock ENERGIZING_ROD_STARTER = REG.register("energizing_rod", new EnergizingRodBlock(Properties.rockNoSolid(1.0f, 8.0f).doesNotBlockMovement(), Tier.STARTER));
    public static final AbstractBlock ENERGIZING_ROD_BASIC = REG.register("energizing_rod", new EnergizingRodBlock(Properties.metalNoSolid(2.0f, 20.0f).doesNotBlockMovement(), Tier.BASIC));
    public static final AbstractBlock ENERGIZING_ROD_HARDENED = REG.register("energizing_rod", new EnergizingRodBlock(Properties.metalNoSolid(2.0f, 20.0f).doesNotBlockMovement(), Tier.HARDENED));
    public static final AbstractBlock ENERGIZING_ROD_BLAZING = REG.register("energizing_rod", new EnergizingRodBlock(Properties.metalNoSolid(2.0f, 20.0f).doesNotBlockMovement(), Tier.BLAZING));
    public static final AbstractBlock ENERGIZING_ROD_NIOTIC = REG.register("energizing_rod", new EnergizingRodBlock(Properties.metalNoSolid(2.0f, 20.0f).doesNotBlockMovement(), Tier.NIOTIC));
    public static final AbstractBlock ENERGIZING_ROD_SPIRITED = REG.register("energizing_rod", new EnergizingRodBlock(Properties.metalNoSolid(2.0f, 20.0f).doesNotBlockMovement(), Tier.SPIRITED));
    public static final AbstractBlock ENERGIZING_ROD_NITRO = REG.register("energizing_rod", new EnergizingRodBlock(Properties.metalNoSolid(2.0f, 20.0f).doesNotBlockMovement(), Tier.NITRO));
    public static final AbstractBlock FURNATOR_STARTER = REG.register("furnator", new FurnatorBlock(Properties.rockNoSolid(1.0f, 8.0f), Tier.STARTER));
    public static final AbstractBlock FURNATOR_BASIC = REG.register("furnator", new FurnatorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BASIC));
    public static final AbstractBlock FURNATOR_HARDENED = REG.register("furnator", new FurnatorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.HARDENED));
    public static final AbstractBlock FURNATOR_BLAZING = REG.register("furnator", new FurnatorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BLAZING));
    public static final AbstractBlock FURNATOR_NIOTIC = REG.register("furnator", new FurnatorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NIOTIC));
    public static final AbstractBlock FURNATOR_SPIRITED = REG.register("furnator", new FurnatorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.SPIRITED));
    public static final AbstractBlock FURNATOR_NITRO = REG.register("furnator", new FurnatorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NITRO));
    public static final AbstractBlock MAGMATOR_STARTER = REG.register("magmator", new MagmatorBlock(Properties.rockNoSolid(1.0f, 8.0f), Tier.STARTER));
    public static final AbstractBlock MAGMATOR_BASIC = REG.register("magmator", new MagmatorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BASIC));
    public static final AbstractBlock MAGMATOR_HARDENED = REG.register("magmator", new MagmatorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.HARDENED));
    public static final AbstractBlock MAGMATOR_BLAZING = REG.register("magmator", new MagmatorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BLAZING));
    public static final AbstractBlock MAGMATOR_NIOTIC = REG.register("magmator", new MagmatorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NIOTIC));
    public static final AbstractBlock MAGMATOR_SPIRITED = REG.register("magmator", new MagmatorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.SPIRITED));
    public static final AbstractBlock MAGMATOR_NITRO = REG.register("magmator", new MagmatorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NITRO));
    public static final AbstractBlock THERMO_STARTER = REG.register("thermo_generator", new ThermoBlock(Properties.rockNoSolid(1.0f, 8.0f), Tier.STARTER));
    public static final AbstractBlock THERMO_BASIC = REG.register("thermo_generator", new ThermoBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BASIC));
    public static final AbstractBlock THERMO_HARDENED = REG.register("thermo_generator", new ThermoBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.HARDENED));
    public static final AbstractBlock THERMO_BLAZING = REG.register("thermo_generator", new ThermoBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BLAZING));
    public static final AbstractBlock THERMO_NIOTIC = REG.register("thermo_generator", new ThermoBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NIOTIC));
    public static final AbstractBlock THERMO_SPIRITED = REG.register("thermo_generator", new ThermoBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.SPIRITED));
    public static final AbstractBlock THERMO_NITRO = REG.register("thermo_generator", new ThermoBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NITRO));
    public static final AbstractBlock SOLAR_PANEL_STARTER = REG.register("solar_panel", new SolarBlock(Properties.rockNoSolid(1.0f, 8.0f), Tier.STARTER));
    public static final AbstractBlock SOLAR_PANEL_BASIC = REG.register("solar_panel", new SolarBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BASIC));
    public static final AbstractBlock SOLAR_PANEL_HARDENED = REG.register("solar_panel", new SolarBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.HARDENED));
    public static final AbstractBlock SOLAR_PANEL_BLAZING = REG.register("solar_panel", new SolarBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BLAZING));
    public static final AbstractBlock SOLAR_PANEL_NIOTIC = REG.register("solar_panel", new SolarBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NIOTIC));
    public static final AbstractBlock SOLAR_PANEL_SPIRITED = REG.register("solar_panel", new SolarBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.SPIRITED));
    public static final AbstractBlock SOLAR_PANEL_NITRO = REG.register("solar_panel", new SolarBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NITRO));
    public static final AbstractBlock REACTOR_STARTER = REG.register("reactor", new ReactorBlock(Properties.rockNoSolid(1.0f, 8.0f), Tier.STARTER));
    public static final AbstractBlock REACTOR_BASIC = REG.register("reactor", new ReactorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BASIC));
    public static final AbstractBlock REACTOR_HARDENED = REG.register("reactor", new ReactorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.HARDENED));
    public static final AbstractBlock REACTOR_BLAZING = REG.register("reactor", new ReactorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BLAZING));
    public static final AbstractBlock REACTOR_NIOTIC = REG.register("reactor", new ReactorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NIOTIC));
    public static final AbstractBlock REACTOR_SPIRITED = REG.register("reactor", new ReactorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.SPIRITED));
    public static final AbstractBlock REACTOR_NITRO = REG.register("reactor", new ReactorBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NITRO));
    public static final AbstractBlock PLAYER_TRANSMITTER_STARTER = REG.register("player_transmitter", new PlayerTransmitterBlock(Properties.rockNoSolid(1.0f, 8.0f), Tier.STARTER));
    public static final AbstractBlock PLAYER_TRANSMITTER_BASIC = REG.register("player_transmitter", new PlayerTransmitterBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BASIC));
    public static final AbstractBlock PLAYER_TRANSMITTER_HARDENED = REG.register("player_transmitter", new PlayerTransmitterBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.HARDENED));
    public static final AbstractBlock PLAYER_TRANSMITTER_BLAZING = REG.register("player_transmitter", new PlayerTransmitterBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BLAZING));
    public static final AbstractBlock PLAYER_TRANSMITTER_NIOTIC = REG.register("player_transmitter", new PlayerTransmitterBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NIOTIC));
    public static final AbstractBlock PLAYER_TRANSMITTER_SPIRITED = REG.register("player_transmitter", new PlayerTransmitterBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.SPIRITED));
    public static final AbstractBlock PLAYER_TRANSMITTER_NITRO = REG.register("player_transmitter", new PlayerTransmitterBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NITRO));
    public static final AbstractBlock ENERGY_HOPPER_STARTER = REG.register("energy_hopper", new EnergyHopperBlock(Properties.rockNoSolid(1.0f, 8.0f), Tier.STARTER));
    public static final AbstractBlock ENERGY_HOPPER_BASIC = REG.register("energy_hopper", new EnergyHopperBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BASIC));
    public static final AbstractBlock ENERGY_HOPPER_HARDENED = REG.register("energy_hopper", new EnergyHopperBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.HARDENED));
    public static final AbstractBlock ENERGY_HOPPER_BLAZING = REG.register("energy_hopper", new EnergyHopperBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BLAZING));
    public static final AbstractBlock ENERGY_HOPPER_NIOTIC = REG.register("energy_hopper", new EnergyHopperBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NIOTIC));
    public static final AbstractBlock ENERGY_HOPPER_SPIRITED = REG.register("energy_hopper", new EnergyHopperBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.SPIRITED));
    public static final AbstractBlock ENERGY_HOPPER_NITRO = REG.register("energy_hopper", new EnergyHopperBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NITRO));
    public static final AbstractBlock ENERGY_DISCHARGER_STARTER = REG.register("energy_discharger", new EnergyDischargerBlock(Properties.rockNoSolid(1.0f, 8.0f), Tier.STARTER));
    public static final AbstractBlock ENERGY_DISCHARGER_BASIC = REG.register("energy_discharger", new EnergyDischargerBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BASIC));
    public static final AbstractBlock ENERGY_DISCHARGER_HARDENED = REG.register("energy_discharger", new EnergyDischargerBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.HARDENED));
    public static final AbstractBlock ENERGY_DISCHARGER_BLAZING = REG.register("energy_discharger", new EnergyDischargerBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.BLAZING));
    public static final AbstractBlock ENERGY_DISCHARGER_NIOTIC = REG.register("energy_discharger", new EnergyDischargerBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NIOTIC));
    public static final AbstractBlock ENERGY_DISCHARGER_SPIRITED = REG.register("energy_discharger", new EnergyDischargerBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.SPIRITED));
    public static final AbstractBlock ENERGY_DISCHARGER_NITRO = REG.register("energy_discharger", new EnergyDischargerBlock(Properties.metalNoSolid(2.0f, 20.0f), Tier.NITRO));
    public static final AbstractBlock ENERGIZED_STEEL = REG.register("energized_steel_block", new AbstractBlock<>(Properties.metal(2.0f, 20.0f)));
    public static final AbstractBlock BLAZING_CRYSTAL = REG.register("blazing_crystal_block", new AbstractBlock(Properties.metal(2.0f, 20.0f)));
    public static final AbstractBlock NIOTIC_CRYSTAL = REG.register("niotic_crystal_block", new AbstractBlock(Properties.metal(2.0f, 20.0f)));
    public static final AbstractBlock SPIRITED_CRYSTAL = REG.register("spirited_crystal_block", new AbstractBlock(Properties.metal(2.0f, 20.0f)));
    public static final AbstractBlock NITRO_CRYSTAL = REG.register("nitro_crystal_block", new AbstractBlock(Properties.metal(2.0f, 20.0f)));
    public static final AbstractBlock URANINITE = REG.register("uraninite_block", new AbstractBlock(Properties.metal(2.0f, 20.0f)));
    public static final AbstractBlock URANINITE_ORE_POOR = REG.register("uraninite_ore_poor", new AbstractBlock(Properties.rock(3.0f, 8.0f)));
    public static final AbstractBlock URANINITE_ORE = REG.register("uraninite_ore", new AbstractBlock(Properties.rock(3.2f, 8.0f)));
    public static final AbstractBlock URANINITE_ORE_DENSE = REG.register("uraninite_ore_dense", new AbstractBlock(Properties.rock(4.0f, 8.0f)));
    public static final AbstractBlock DRY_ICE = REG.register("dry_ice", new AbstractBlock(Properties.rock(2.0f, 8.0f)));
}
